plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.palantir.docker' version '0.34.0'
}

group = 'com.tncalculator'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    guavaVersion = '31.1-jre'
    lombokVersion = '1.18.26'
    mapStructVersion = '1.5.3.Final'
    testContainersVersion = '1.17.6'
    testContainersPostgresqlVersion = '1.17.6'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core'
    implementation "com.google.guava:guava:$guavaVersion"
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    compileOnly "org.mapstruct:mapstruct:$mapStructVersion"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    testImplementation "org.testcontainers:postgresql:$testContainersPostgresqlVersion"
    runtimeOnly 'org.postgresql:postgresql:42.3.8'
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    name "tn/${project.name}:${project.version}"
    buildArgs(['JAR_FILE': "${project.name}-${project.version}.jar"])
    files bootJar.archiveFile
}
